/*==========================================================================
  * Copyright (c)      Realtek Semiconductor Corporation, 2009
  * All rights reserved.
  * ========================================================================*/

/*================= File Description =======================================*/
/**
 * @file
 * 	This file is for rtdaccess related functions.
 *
 * @author 	$Author$
 * @date	$Date$
 * @version	$Revision$
 * @ingroup	rtdaccess
 */
#include "sparrow.h"
/**
 * @addtogroup rtdaccess
 * @{
 */

#ifndef _PANELAPI_H
#define  _PANELAPI_H
#include "panel_struct.h"

UINT16 flow_Get_Panel_Parameter(UINT16 offset, UINT8 len);

// Declare macro
#define FLOW_GET_PANEL_PARAMETER(ELEMENT)	\
		flow_Get_Panel_Parameter(OFFSET_STRUCT(STRUCT_PANEL_PARAMETER, ELEMENT), SIZEOF_STRUCT(STRUCT_PANEL_PARAMETER, ELEMENT))

//UINT32 Get_DISPLAY_PORT();
#define Get_DISPLAY_PORT()	(FLOW_GET_PANEL_PARAMETER(DISPLAY_PORT))

//UINT32 Get_DISPLAY_COLOR_BITS();
#define Get_DISPLAY_COLOR_BITS() (FLOW_GET_PANEL_PARAMETER(DISPLAY_COLOR_BITS))

//UINT32 Get_DISPLAY_EVEN_RSV1_BIT();
#define Get_DISPLAY_EVEN_RSV1_BIT() (FLOW_GET_PANEL_PARAMETER(DISPLAY_EVEN_RSV1_BIT))

//UINT32 Get_DISPLAY_ODD_RSV1_BIT();
#define Get_DISPLAY_ODD_RSV1_BIT() (FLOW_GET_PANEL_PARAMETER(DISPLAY_ODD_RSV1_BIT))

//UINT32 Get_DISPLAY_BITMAPPING_TABLE();
#define Get_DISPLAY_BITMAPPING_TABLE() (FLOW_GET_PANEL_PARAMETER(DISPLAY_BITMAPPING_TABLE))

//UINT32 Get_DISPLAY_PORTAB_SWAP() ;
#define Get_DISPLAY_PORTAB_SWAP() (FLOW_GET_PANEL_PARAMETER(DISPLAY_PORTAB_SWAP))

//UINT32 Get_DISPLAY_RED_BLUE_SWAP();
#define Get_DISPLAY_RED_BLUE_SWAP() (FLOW_GET_PANEL_PARAMETER(DISPLAY_RED_BLUE_SWAP))

//UINT32 Get_DISPLAY_MSB_LSB_SWAP();
#define Get_DISPLAY_MSB_LSB_SWAP()  (FLOW_GET_PANEL_PARAMETER(DISPLAY_MSB_LSB_SWAP))

//UINT32 Get_DISPLAY_SKEW_DATA_OUTPUT();
#define Get_DISPLAY_SKEW_DATA_OUTPUT() 	(FLOW_GET_PANEL_PARAMETER(DISPLAY_SKEW_DATA_OUTPUT))

//UINT32 Get_DISPLAY_OUTPUT_INVERSE();
#define Get_DISPLAY_OUTPUT_INVERSE() 	(FLOW_GET_PANEL_PARAMETER(DISPLAY_OUTPUT_INVERSE))

//UINT32 Get_DISPLAY_CLOCK_DELAY();
#define Get_DISPLAY_CLOCK_DELAY()		(FLOW_GET_PANEL_PARAMETER(nDClkDelay) & 0x07)
// 0: No Swap, 1: Swap

//UINT32 Get_DISPLAY_VERTICAL_SYNC_NORMAL() ;
#define Get_DISPLAY_VERTICAL_SYNC_NORMAL() 	(FLOW_GET_PANEL_PARAMETER(DISPLAY_VERTICAL_SYNC_NORMAL))

//UINT32 Get_DISPLAY_HORIZONTAL_SYNC_NORMAL() ;
#define Get_DISPLAY_HORIZONTAL_SYNC_NORMAL()	(FLOW_GET_PANEL_PARAMETER(DISPLAY_HORIZONTAL_SYNC_NORMAL))

//UINT32 Get_DISPLAY_RATIO_4X3();
#define Get_DISPLAY_RATIO_4X3()			(FLOW_GET_PANEL_PARAMETER(DISPLAY_RATIO_4X3))

//UINT32 Get_DISPLAY_CLOCK_MAX() ;
#define  Get_DISPLAY_CLOCK_MAX()			(FLOW_GET_PANEL_PARAMETER(nMaxClock))

// UINT32 Get_DISPLAY_REFRESH_RATE() ;
#define Get_DISPLAY_REFRESH_RATE()		(FLOW_GET_PANEL_PARAMETER(nRefreshHz))

//UINT32 Get_DISP_HORIZONTAL_TOTAL() ;
#define Get_DISP_HORIZONTAL_TOTAL()	(FLOW_GET_PANEL_PARAMETER(nHTotal))

//UINT32 Get_DISP_VERTICAL_TOTAL();
#define Get_DISP_VERTICAL_TOTAL()		(FLOW_GET_PANEL_PARAMETER(nVTotal))

//UINT32 Get_DISP_HSYNC_WIDTH() ;
#define Get_DISP_HSYNC_WIDTH()			(FLOW_GET_PANEL_PARAMETER(nHSyncWidth))

//UINT32 Get_DISP_VSYNC_LENGTH();
#define Get_DISP_VSYNC_LENGTH()		(FLOW_GET_PANEL_PARAMETER(nVSyncLength))

//UINT32 Get_DISP_DEN_STA_HPOS() ;
#define Get_DISP_DEN_STA_HPOS()		(FLOW_GET_PANEL_PARAMETER(nDEHStart))

//UINT32 Get_DISP_DEN_END_HPOS();
#define Get_DISP_DEN_END_HPOS()		(FLOW_GET_PANEL_PARAMETER(nDEWidth) + FLOW_GET_PANEL_PARAMETER(nDEHStart))

//UINT32 Get_DISP_DEN_STA_VPOS();
#define Get_DISP_DEN_STA_VPOS()		(FLOW_GET_PANEL_PARAMETER(nDEVStart))

//UINT32 Get_DISP_DEN_END_VPOS() ;
#define Get_DISP_DEN_END_VPOS()		(FLOW_GET_PANEL_PARAMETER(nDEVLength) + FLOW_GET_PANEL_PARAMETER(nDEVStart))

/*
 * Display active window setup
 */
//UINT32 Get_DISP_ACT_STA_HPOS() ;
#define Get_DISP_ACT_STA_HPOS()		(FLOW_GET_PANEL_PARAMETER(nActiveHStart))

//UINT32 Get_DISP_ACT_END_HPOS() ;
#define Get_DISP_ACT_END_HPOS()		(FLOW_GET_PANEL_PARAMETER(nActiveHStart) + FLOW_GET_PANEL_PARAMETER(nActiveWidth))

#define Get_DISP_ACT_H_WID()			FLOW_GET_PANEL_PARAMETER(nActiveWidth)

//UINT32 Get_DISP_ACT_STA_VPOS() ;
#define Get_DISP_ACT_STA_VPOS()		(FLOW_GET_PANEL_PARAMETER(nActiveVStart))

//UINT32 Get_DISP_ACT_END_VPOS() ;
#define Get_DISP_ACT_END_VPOS()		(FLOW_GET_PANEL_PARAMETER(nActiveVStart) + FLOW_GET_PANEL_PARAMETER(nActiveVLength))

#define Get_DISP_ACT_V_LEN()			FLOW_GET_PANEL_PARAMETER(nActiveVLength)

//UINT32 Get_DISP_HSYNC_LASTLINE() ;
#define Get_DISP_HSYNC_LASTLINE()		(FLOW_GET_PANEL_PARAMETER(nHSyncLastLine))

//UINT32 Get_DISP_ACT_STA_BIOS();
#define Get_DISP_ACT_STA_BIOS()			(FLOW_GET_PANEL_PARAMETER(nActStartBIOS))

//UINT32 Get_DEFAULT_DPLL_M_DIVIDER()	;
#define Get_DEFAULT_DPLL_M_DIVIDER()	(FLOW_GET_PANEL_PARAMETER(nDPLL_M))

//UINT32 Get_DEFAULT_DPLL_N_DIVIDER()	;
#define  Get_DEFAULT_DPLL_N_DIVIDER()	(FLOW_GET_PANEL_PARAMETER(nDPLL_N))

//UINT32 Get_DISPLAY_CLOCK_TYPICAL();
#define Get_DISPLAY_CLOCK_TYPICAL()	(FLOW_GET_PANEL_PARAMETER(nTypicalClk))

//UINT32 Get_PANEL_TO_LVDS_ON_ms();
#define Get_PANEL_TO_LVDS_ON_ms()		(FLOW_GET_PANEL_PARAMETER(nTimeforPanel2LVDSOn))

//UINT32 Get_LVDS_TO_LIGHT_ON_ms();
#define Get_LVDS_TO_LIGHT_ON_ms()		(FLOW_GET_PANEL_PARAMETER(nTimeforLVDS2LightOn))

//UINT32 Get_LIGHT_TO_LDVS_OFF_ms();
#define Get_LIGHT_TO_LDVS_OFF_ms()		(FLOW_GET_PANEL_PARAMETER(nTimeforLight2LVDSOff))

//UINT32 Get_LVDS_TO_PANEL_OFF_ms();
#define Get_LVDS_TO_PANEL_OFF_ms()		(FLOW_GET_PANEL_PARAMETER(nTimeforLVDS2PanelOff))

//UINT32 Get_PANEL_OFF_TO_ON_ms();
#define Get_PANEL_OFF_TO_ON_ms()		(FLOW_GET_PANEL_PARAMETER(nTimePanelOff2On))
#endif

